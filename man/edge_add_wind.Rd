% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edge_add_wind.R
\name{edge_add_wind}
\alias{edge_add_wind}
\title{Retrieve ERA5 variable along edge}
\usage{
edge_add_wind(
  graph,
  edge_s,
  edge_t,
  pressure = NULL,
  variable = c("u", "v"),
  rounding_interval = 60,
  interp_spatial_linear = FALSE,
  return_averaged_variable = FALSE,
  file = function(stap_id)
    glue::glue("./data/wind/{graph$param$id}/{graph$param$id}_{stap_id}.nc"),
  quiet = FALSE
)
}
\arguments{
\item{graph}{either a \code{tag} or a \code{graph} GeoPressureR object.}

\item{edge_s}{a index of the source node of the edge. Either a vector with 3D index or a matrix
of 3 columns, one for each dimension.}

\item{edge_t}{a index of the target node of the edge. Either a vector with 3D index or a matrix
of 3 columns, one for each dimension.}

\item{pressure}{pressure measurement of the associated \code{tag} data used to estimate the pressure
level (i.e., altitude) of the bird during the flights. This data.frame needs to contain \code{date} as
POSIXt and \code{value} in hPa.}

\item{variable}{list of the variables to extract from \href{https://bit.ly/3BrwLBM}{the ERA5 pressure level } using the \code{shortName} notation: \code{"u"}, \code{"v"},  \code{"t"}, \code{"cc"}, \code{"r"},
\code{"w"}, \code{"ciwc"}, \code{"clwc"}, \code{"q"}, \code{"cswc"}, \code{"d"}, \code{"z"}, \code{"o3"}, \code{"pv"}, \code{"vo"}.}

\item{rounding_interval}{temporal resolution on which to query the variable (min). Default is to
match ERA5 native resolution (1hr).}

\item{interp_spatial_linear}{logical to interpolate the variable linearly over space, if \code{FALSE}
takes the nearest neighbour. ERA5 native resolution is 0.25Â°}

\item{return_averaged_variable}{logical to return the variable for each timestep or average for
the entire flight.}

\item{file}{absolute or relative path of the ERA5 wind data file to be downloaded. Function
taking as single argument the stationary period identifier.}

\item{quiet}{logical to hide messages about the progress}
}
\value{
A data.frame with columns:
\itemize{
\item \code{stap_s} id of the source/origin stationary period
\item \code{stap_t} id of the target/destination stationary period
\item \code{s} node id of the source (same as/similar to \code{edge_s})
\item \code{t} node id of the target (same as/similar to \code{edge_t})
\item \code{lat_s} latitude of the source
\item \code{lat_t} latitude of the target
\item \code{lon_s} longitude of the source
\item \code{lon_t} longitude of the target
\item \code{start} start datetime of the flight
\item \code{end} end datetime of the flight
\item \code{duration} flight duration
\item \code{n} number of flight
\item \code{distance} distance of the flight
\item \code{bearing} bearing of the flight
\item \code{gs} groundspeed
\item \code{ws} windspeed (if \code{graph} provided)
}
}
\description{
Reads the NetCDF files and extracts the variable requested along each flight defined by the
edges.
\itemize{
\item Time: linear interpolation using the resolution requested with \code{rounding_interval}
\item Space: nearest neighbour interpolation by default or bi-linear with \code{pracma::interp2} if
\code{interp_spatial_linear=TRUE}
\item Pressure/altitude: linear interpolation using the exact \code{pressure} values
}
}
\seealso{
\href{https://raphaelnussbaumer.com/GeoPressureManual/trajectory-with-wind.html}{GeoPressureManual}
}
