% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.map.R
\name{plot.map}
\alias{plot.map}
\title{Plot a \code{map} object}
\usage{
\method{plot}{map}(
  x,
  path = NULL,
  thr_likelihood = 1,
  plot_leaflet = TRUE,
  provider = "Esri.WorldTopoMap",
  provider_options = leaflet::providerTileOptions(),
  palette = "auto",
  opacity = 0.8,
  legend = FALSE,
  fac_res_proj = 4,
  ...
)
}
\arguments{
\item{x}{a \code{\link[terra]{SpatRaster}} or a \code{RasterLayer} object--see \code{\link[raster]{raster}}}

\item{path}{a GeoPressureR \code{path} data.frame}

\item{thr_likelihood}{threshold of percentile (see details).}

\item{plot_leaflet}{logical to use an interactive \code{leaflet} map instead of \code{terra::plot}}

\item{provider}{the name of the provider (see
\url{https://leaflet-extras.github.io/leaflet-providers/preview/} and
\url{https://github.com/leaflet-extras/leaflet-providers})}

\item{provider_options}{tile options. See leaflet::addProviderTiles() and
leaflet::providerTileOptions()}

\item{palette}{The colors or color function that values will be mapped to}

\item{opacity}{the base opacity of the raster, expressed from 0 to 1}

\item{legend}{logical or character. If not \code{FALSE} a legend is drawn. The character value can be used to indicate where the legend is to be drawn. For example "topright" or "bottomleft". Use \code{plg} for more refined placement. Not supported for continuous legends (the default for raster data)}

\item{fac_res_proj}{Factor of the resolution of the reprojection (see details above). A value of
\code{1} will roughly reproject on a map with similar size resulting in relatively high inaccuracy of
the pixel displayed. Increasing this factor will reduce the uncertainty but might also increase
the computational cost of the reprojection.}

\item{...}{named parameters to add to the options}

\item{map}{a GeoPressureR \code{map} object}
}
\value{
a plot or leaflet object.
}
\description{
This function plots a GeoPressureR \code{map} object.

You can plot on top of the \code{map} a \code{path}, this uses the \code{plot_path()} function.

Our maps are defined in lat-lon (i.e., EPSG:4326), but the display of maps on web map are
nearly always in \href{https://en.wikipedia.org/wiki/Web_Mercator_projection}{web mercator} (i.e.,
EPSG:3857). We therefore need to reproject our map for display.
However, we don't really want to interpolate the map as each pixel might be important to
visualize. We therefore re-project with a near-neighbour interpolation (\code{method = "near"}
in \code{\link[terra:project]{terra::project()}}). Yet to avoid having pixel misplaced, we generally need to use a
projection with a finer resolution. The argument \code{fac_res_proj} controls the relative change of
resolution between the original map to the projected map.
}
\examples{
withr::with_dir(system.file("extdata", package = "GeoPressureR"), {
  tag <- tag_create("18LX", quiet = TRUE) |>
    tag_label(quiet = TRUE) |>
    tag_set_map(
      extent = c(-16, 23, 0, 50),
      scale = 4
    ) |>
    geopressure_map(quiet = TRUE)
})

plot(tag$map_pressure)

plot(tag$map_pressure, plot_leaflet = FALSE)

# `thr_likelihood` can be used to visualize its effect in `graph_create`
plot(tag$map_pressure,
  thr_likelihood = 0.9,
  palette = "viridis",
  opacity = 1,
  provider = "CartoDB.DarkMatterNoLabels"
)

}
\seealso{
\code{\link[=plot_path]{plot_path()}}
}
\concept{map plot_tag}
