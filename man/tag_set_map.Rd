% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tag_set_map.R
\name{tag_set_map}
\alias{tag_set_map}
\title{Configure the spatial and temporal parameters of the \code{map} of a \code{tag} object}
\usage{
tag_set_map(
  tag,
  extent,
  scale = 10,
  known = data.frame(stap_id = integer(), known_lat = double(), known_lon = double()),
  include_stap_id = NULL,
  include_min_duration = 0
)
}
\arguments{
\item{tag}{a GeoPressureR \code{tag} object.}

\item{extent}{geographical extent of the map on which the likelihood and graph model will be
computed. Vector of length 4 \code{c(xmin, xmax, ymin, ymax)} or \code{c(W, E, S, N)}.}

\item{scale}{number of pixels per 1° latitude-longitude. For instance, \code{scale = 10} for a
resolution of 0.1° (~10km) and \code{scale=4} for a resolution of 0.25° (~30km). To avoid
interpolating the ERA5 data, the scale should be equal to or smaller than 10. Read more about
scale on the \href{https://developers.google.com/earth-engine/guides/scale}{Google earth Engine documentation }.}

\item{known}{data.frame containing the known positions of the bird (e.g., equipment or retrieval
site) with columns \code{stap_id}, \code{known_lat} and \code{known_lon}. You can set position of the last
stationary period using \code{stap_id = -1}. Also accept list which are converted as data.frame.}

\item{include_stap_id}{vector of \code{stap_id} defining which stationary period to model, that is,
to compute in the likelihood map and use in the graph.}

\item{include_min_duration}{minimum duration threshold of stationary periods to include (in
hours).}
}
\value{
A GeoPressureR \code{tag} object with:
\itemize{
\item \code{stap}: Data.frame of all stationary periods with three new columns: \code{known_lat} and
\code{known_lon} define the known position during these stationary periods, and \code{include} defines
whether the likelihood map of this stationary period should be computed and later used in the
graph.
\item \code{extent} same as input parameter \code{extent}
\item \code{scale} same as input parameter \code{scale}
}
}
\description{
This function adds to \code{tag} the parameters defining the 3D grid of the map. The spatial
parameters (\code{extent} and \code{scale}) define the \strong{geographical dimensions of the map}, and the
\strong{temporal dimension} is defined based on the stationary periods built using the labels.
\code{include_stap_id} and \code{include_min_duration} can be used to limit which stationary periods are
computed and modelled in the analysis. By default, all stationary periods are included.

In addition, \code{tag} offers the possibility to define \code{known} locations (e.g., equipment or
retrieval site). These can only be defined at the level of a stationary period (i.e., assuming
constant position during the whole stationary period) but you can define as many known stationary
periods as you wish. Because the index of the last stationary period is generally unknown, you
can use negative indexing in \code{known}, i.e., \code{known$stap_id = -1} will be converted to
\code{nrow(tag$stap)}.

By default, no likelihood map will be computed for these stationary periods and the trajectory
model will be more constrained, saving significant computational time. You can change this
using the \code{compute_known} parameter in \code{geopressure_map()}.
}
\examples{
withr::with_dir(system.file("extdata", package = "GeoPressureR"), {
  tag <- tag_create("18LX", quiet = TRUE) |> tag_label(quiet = TRUE)
})

# Default tag
tag_default <- tag_set_map(tag, c(-16, 23, 0, 50))

print(tag_default)

# Customized tag, with coarse grid scale, known position for the first stationary
#  period and considering only the stationary periods lasting more than 20hours.
tag_custom <- tag_set_map(tag,
  extent = c(-16, 23, 0, 50),
  scale = 1,
  include_min_duration = 20,
  known = data.frame(
    stap_id = 1,
    known_lon = 17.05,
    known_lat = 48.9
  )
)

print(tag_custom)

}
\seealso{
\href{https://bit.ly/3QGkf6N}{GeoPressureManual}

Other tag: 
\code{\link{print.tag}()},
\code{\link{tag_create}()}
}
\concept{tag}
